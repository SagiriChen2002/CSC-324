knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(tidyr)
library(magrittr)
library(ggplot2)
library(qrcode)
library(lattice)
library(wordcloud2)
library(shiny)
library(leaflet)
library(maps)
library(sf)
library(shinydashboard)
library(lubridate)
library(shiny)
library(ggiraph)
# UI for the shiny app
ui <- dashboardPage(
# Create a shiny dashboard titled
dashboardHeader(title = "test"),
dashboardSidebar(
# Two visualization available, one is the US map, the other one is the Line graph
sidebarMenu(
menuItem("Map", tabName = "map", icon = icon("globe")),
menuItem("Line Graph", tabName = "line_graph", icon = icon("line-chart"))
)
),
dashboardBody(
tabItems(
# Sidebar items of the US map
tabItem(tabName = "map",
fluidRow(
column(width = 3,
# Select the gradation attribute
selectInput("attribute", "Choose an attribute:",
choices = colnames(data)[-1],
selected = colnames(data)[2]),
# Select the sample filter
selectInput("presetFilter", "Choose a preset filter:",
choices = c("No Filter", "High Salary", "Low Rent"),
selected = "No Filter"),
# Number input for filtering
numericInput("minSalaryAdjusted", "Min Mean SWE Salary:", min = 0, max = max(data$MeanSalaryAdjusted, na.rm = TRUE), value = 0),
numericInput("maxSalaryAdjusted", "Max Mean SWE Salary:", min = 0, max = max(data$MeanSalaryAdjusted, na.rm = TRUE), value = max(data$MeanSalaryAdjusted, na.rm = TRUE)),
numericInput("minRent", "Min Rent:", min = 0, max = max(data$Rent, na.rm = TRUE), value = 0),
numericInput("maxRent", "Max Rent:", min = 0, max = max(data$Rent, na.rm = TRUE), value = max(data$Rent, na.rm = TRUE)),
actionButton("applyFilter", "Filter")
),
column(width = 9,
leafletOutput("map"),
textOutput("text"),
tableOutput("description")
)
),
tableOutput("table")
),
# Create the line graph
tabItem(tabName = "line_graph",
fluidRow(
column(width = 3,
# Select the two attributes for the line graph
selectInput("attribute1", "Select Attribute 1:", choices = colnames(data)[-1]),
selectInput("attribute2", "Select Attribute 2:", choices = colnames(data)[-1]),
actionButton("plotGraph", "Plot Graph")
),
column(width = 9,
plotOutput("linePlot")
)
)
)
)
)
)
